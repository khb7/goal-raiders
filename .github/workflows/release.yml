  # C:/Users/onebe/goal-raiders/.github/workflows/release.yml
    name: Generate SLSA Provenance for Release
    
    on:
      release:
        types: [published] # GitHub에서 새 릴리스가 생성될 때 이 워크플로우를 실행합니다.
    
    jobs:
      build-and-generate-provenance:
        runs-on: ubuntu-latest # 워크플로우를 실행할 운영체제 환경
        permissions:
          contents: write # 릴리스 아티팩트 업로드 권한
          id-token: write # Sigstore 서명을 위한 OIDC 토큰 권한 (SLSA Provenance에 필요)
    
        steps:
          - name: Checkout code
            uses: actions/checkout@v4 # 저장소 코드를 워크플로우 환경으로 가져옵니다.
    
          - name: Set up Java
            uses: actions/setup-java@v4
            with:
              distribution: 'temurin' # Java 배포판 (예: temurin, adopt)
              java-version: '17' # 프로젝트에 맞는 Java 버전으로 변경하세요 (현재 프로젝트는 17 사용 가능성 높음)     
              cache: 'maven' # Maven 의존성 캐싱 설정
    
          - name: Build Java Backend with Maven
            run: mvn clean install -f backend/pom.xml # backend 디렉토리의 pom.xml을 사용하여 Maven 빌드를 수행합니다.
            # 이 명령어는 'backend' 디렉토리에서 'mvn clean install'을 실행하여 JAR 파일을 생성합니다.
            # 생성된 JAR 파일은 'backend/target/' 디렉토리에 있을 것입니다.
    
          - name: Generate SLSA Provenance
            uses: slsa-framework/slsa-github-generator/.github/actions/generator@v1.9.0
            with:
              # Provenance를 생성할 아티팩트의 경로를 지정합니다.
              # 현재 프로젝트 구조를 보면, Java 백엔드의 JAR 파일은 'backend/target/backend-0.0.1-SNAPSHOT.jar'일 가능성이 높습니다.
              # 실제 빌드된 JAR 파일의 정확한 이름과 경로를 확인하여 여기에 입력해야 합니다.
              # 예를 들어, 'backend/target/your-app-name-version.jar'
              artifact-path: 'backend/backend/target/backend-0.0.1-SNAPSHOT.jar'
    
              # Provenance에 기록될 빌드 스크립트 (실제로 빌드를 수행한 명령어)
              build-script: |
                mvn clean install -f backend/pom.xml
    
              # 추가: 만약 Firebase Functions (Node.js)에 대한 Provenance를 생성하고 싶다면:
              # artifact-path: 'functions/index.js' # 또는 'functions/lib/index.js' 등
              # build-script: |
              #   npm install --prefix functions
              #   npm run build --prefix functions # 또는 필요한 빌드 명령어
    
              # 추가: 만약 React Frontend에 대한 Provenance를 생성하고 싶다면:
              # artifact-path: 'public/*' # 또는 'build/*' (create-react-app의 기본 빌드 출력 디렉토리)
              # build-script: |
              #   npm install
              #   npm run build